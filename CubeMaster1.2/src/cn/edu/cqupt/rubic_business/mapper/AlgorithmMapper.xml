<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.edu.cqupt.rubic_business.dao.AlgorithmDao">

	<sql id="algorithmItems">
		algorithm_id, algorithm_name, platform, description, package_name, parameter_count, 
		associated_tasks, data_requirements, in_pattern, out_pattern, scope, submit_datetime, 
		ispublic, data_test, file_path
	</sql>
	
	<sql id="algorithmValues">
		#{algorithm_id}, #{algorithm_name}, #{platform}, #{description}, #{package_name}, 
		#{parameter_count}, #{associated_tasks}, #{data_requirements}, #{in_pattern}, 
		#{out_pattern}, #{scope}, #{submit_datetime}, #{ispublic}, #{data_test}, #{file_path}
	</sql>

	<!-- 添加算法 map形式 -->
	<insert id="addAlgorithmInMap" parameterType="map">
		<selectKey resultType="int" keyProperty="algorithm_id" order="AFTER">
			select LAST_INSERT_ID() as algorithm_id
		</selectKey>
		insert into algorithm (<include refid="algorithmItems"/>) values (<include refid="algorithmValues"/>)
	</insert>

	<!--查询所有算法信息  -->
	<select id="findAllAlgorithm" resultType="cn.edu.cqupt.rubic_business.Model.po.AlgorithmPo" >
	  select * from algorithm
	</select>

	<!--根据aid查找算法  -->
	<select id="findAlgorithmById" resultType="cn.edu.cqupt.rubic_business.Model.po.AlgorithmPo" parameterType="int">
	  select * from algorithm where algorithm_id=#{aid}
	</select>
	<!--添加算法  -->
	<insert id="addAlgorithm" parameterType="cn.edu.cqupt.rubic_business.Model.po.AlgorithmPo">
		insert into algorithm(<include refid="algorithmItems" />) values(<include refid="algorithmValues"/>)
	</insert>
	
	<!--根据算法名字查找aid  -->
	<select id="findIdByName" parameterType="String" resultType="int" >
		select max(algorithm_id) from algorithm where algorithm_name=#{algorithm_name}
	</select>
	
	<!-- 添加算法参数关系 -->
	<insert id="addParameterRelationship" parameterType="java.util.Map">
		insert into algorithm_parameter_relationship(algorithm_id, parameter_id) values(#{algorithm_id}, #{parameter_id})
	</insert>
	
	<!-- 添加算法关键字关系 -->
	<insert id="addKeywordRelationship" parameterType="java.util.Map">
		insert into algorithm_keyword_relationship(algorithm_id, keyword_id) values(#{algorithm_id}, #{keyword_id})
	</insert>
	
	<!-- 添加算法用户关系 -->
	<insert id="addUserRelationship" parameterType="java.util.Map">
		insert into user_algorithm_relationship(user_id, algorithm_id) values(#{user_id}, #{algorithm_id})
	</insert>
	
	<!-- 查询算法所有类型 聚类|分类 -->
	<select id="findAllAlgorithmClass" resultType="String">
		select distinct(associated_tasks) from algorithm
	</select>
	
	<select id="findAllAlgorithmByClass" parameterType = "String" resultType="map">
		select * from algorithm where associated_tasks = #{associated_tasks}
	</select>
	
	<update id="insertCorrect_rateByAlgorithmId" parameterType="java.util.Map">
		UPDATE algorithm SET correct_rate=#{correct_rate} WHERE algorithm_id=#{algorithmId}
	</update>
	<select id="findCorrect_rateByAlgorithmId" parameterType="int" resultType="double">
		SELECT correct_rate FROM algorithm WHERE algorithm_id=#{algorithmId};
	</select>
	
	<!--查询查找当前用户的所有算法  -->
	<select id="findCurrentUserAlgorithms" resultType="cn.edu.cqupt.rubic_business.Model.po.AlgorithmPo" parameterType="int" >
	    Select * From algorithm Where algorithm_id In(
	  				Select algorithm_id From user_algorithm_relationship Where user_id = #{currentUserID}) 
	  				Order By associated_tasks;
	</select>
	
	<!-- 根据算法Id查询当前算法的作者Id和文件路径 -->
	<select id="findUserIdAndFilePathByAid" resultType="java.util.Map">
	    select user_id,file_path from user_algorithm_filepath_view where algorithm_id=#{algorithmId}
	</select>
</mapper>